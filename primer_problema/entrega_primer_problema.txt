- Impresión del problema: 
	Me pareció relativamente sencillo. Lo pensé de forma parecida a un problema que vimos en clase, en donde si se lanzaba un determinado producto A, entonces el producto B no se podía lanzar. En este caso, reemplacé conceptualmente "producto" por "prenda" y el "lanzar" por "lavar", teniendo en cuenta que, si se lavaba una prenda A, no se podía lavar ninguna de las prendas incompatibles en el mismo lavado.

- Forma de resolución: 
	Dado lo dicho antes, me parece una buen acercamiento plantear variables binarias Yij, donde i es el número de prenda y j es el número de lavado al que será asignado. Tanto i como j van de 1 a 20 (en el peor de los casos [todas las prendas son incompatibles entre sí] voy a tener 20 lavados, es decir, uno por cada prenda). Luego, tener variables enteras YLi, donde cada una representa el tiempo que requiere el lavado i. Finalmente, me definí una variable CTL, que representa la cantidad total de lavados, la cual voy a usar en el funcional como se explica después.

- Comentarios:
	Inicialmente creí que el objetivo del problema era determinar la agrupación de las prendas en diferentes lavados para minimizar el tiempo de lavado total en un determinado periodo (supongo que es por día), pero después cambié el enfoque a minimizar la cantidad total de lavados en lugar del tiempo total. Esto porque me di cuenta de que el tiempo total de lavado siempre corresponde al tiempo de la prenda que más tarda en lavarse, dado que nada impide que lavemos cada prenda en un lavado distinto (asumo que tenemos suficiente cantidad de lavarropas para lavar todas por separado). Entonces, con este pequeño cambio de enfoque, decidí agregar la variable CTL para cuantificar la cantidad de lavados distintos que se van a realizar, y buscar minimizar ese valor con el funcional.