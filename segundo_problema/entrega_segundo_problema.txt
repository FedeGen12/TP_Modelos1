- Impresión del problema: 
	Hay un aumento de complejidad importante debido únicamente a la cantidad de prendas que se agregaron (ya que el
	problema en sí es el mismo que antes).

- Forma de resolución: 
	Continuamos con el mismo objetivo que antes: minimizar la cantidad total de lavados.

	Lo que hice fue definime un diccionario de lavados, con clave igual al número de lavado y el valor asociado es una
	lista con las prendas que van a ser lavadas en ese lavado particular. A partir de esto, lo instancio con un lavado
	vacío, y luego, en cada iteración, para cada lavado ya creado, chequeo si la prenda sobre la que estoy iterando
	actualmente es compatible con el resto de las prendas ya asignadas en dicho lavado.
	    * Si es compatible ==> agrego a la prenda en cuestión al lavado.
	    * Si no es compatible ==> sigo con el próximo lavado ya creado.

	Si la prenda no es compatible con ninguno de los lavados creados hasta el momento, lo que hago es crear un nuevo
	lavado que contenga únicamente a dicha prenda, y lo agrego al diccionario de los lavados ya creados.

- Comentarios:
	Inicialmente probé resolverlo con programación lineal de tres formas distintas:
	    - Con el mismo algoritmo del primer problema.
	    - Con Scheduling.
	    - Con Coloreo de grafos.
	El problema es que, debido a la dimensión del problema, se generan una cantidad de variables importantes. Intenté
	correr los 3 modelos (por separado lógicamente) y ninguno logró terminar en menos de 8 horas (al momento en el que
	estoy escribiendo esto, el modelo de Coloreo va +8hs corriendo, pero voy a dejarlo lo máximo posible para poder
	comparar el resultado con la aproximación obtenida con este algoritmo que estoy entregando).

- Comentario sobre Coloreo con PL:
    Me pareció interesante realizar la implementación del coloreo con grafos con programación lineal más allá de que
    tarda demasiado tiempo con el dominio del segundo problema. Lo probé con el dominio del primer problema y funciona
    perfectamente, dando el resultado óptimo (o al menos el que creemos óptimo).

- Comentario sobre Coloreo sin PL:
    Decidí aplicar la técnica de Backtracking para coloreo de grafos, logrando llegar a una solución con el dominio
    del segundo problema en aproximadamente 10 segundos. Notar que, durante el recorrido del árbol de soluciones, se
    aplican 3 condiciones de poda sobre la solución en la iteración actual (la cual llamo solución actual):
        * Si la solución actual ya no es compatible porque pusimos a una prenda con otra incompatible (o sea, pintamos dos
          vértices adyacentes del mismo color), cortamos y no seguimos recorriendo esa rama de soluciones.
        * Si la solución actual usa más lavados (colores) que la mejor que encontramos hasta ahora, también cortamos.
        * Si la solución actual usa más tiempo de lavado que la mejor que encontramos hasta ahora, también cortamos.
    De esta forma, logramos evitar recorrer el árbol de soluciones completo, obteniendo un rendimiento mucho mejor que
    un algoritmo de fuerza bruta (que recorre el árbol completo aunque muchas ramas no nos lleven a soluciones óptimas
    o factibles).

    En este segundo commit de la solución de Coloreo sin PL, agregué una parte en para considerar dominios que formen
    grafos con vértices aislados o con ciclos aislados. En nuestro caso sucede con varias prendas, por ejemplo, la
    prenda 104 es incompatible solo con la 136, y la 136 solo con la 104. Entonces, en el grafo, tenemos una única
    arista no dirigida (porque así modelé el grafo) de 104 a 136, quedando estos dos vértices completamente aislados
    de los demás. Por lo tanto, con el algoritmo que tenía hasta ahora, no se recorrían nunca, haciendo que nunca se les
    asigne un color (o sea, un lavado). Con este chequeo agregado, siempre se pintan (lavan) todos los vértices (prendas).

    Agrego la escritura del archivo con la solución a este problema. Vemos que lo soluciona de una forma más eficiente
    que la versión sin programación lineal que hice (la que no usaba coloreo). Ésta última nos daba un tiempo total de
    lavado de 755, y la versión sin programación lineal pero con coloreo nos devuelve un tiempo total de 703, usando
    dos lavados menos.